genome-complexity.go:
	Compute various complexities of genomes, include repeat density,
	distinct substring density, and I complexity.

Example:
	go run compute_didkdr.go genome-file.fasta

Install genome-complexity.go:
   go get github.com/vtphan/sequence-complexity

=========================================================================

cross_validation.py:

usage: cross_validation.py [-h]
                           complexity training_portion dir performance_keys
                           [performance_keys ...]

Train and predict short-read alignment performance using different complexity
measures.

positional arguments:
  complexity        file containing complexity values of genomes
  training_portion  fraction of data used for training
  dir               directory containing text files storing aligner
                    performance
  performance_keys  Prec-100, Rec-100, Prec-75, Rec-75, Prec-50, Rec-50, ...

optional arguments:
  -h, --help        show this help message and exit


Example: using 40% of data for training, 60% for testing
	python cross_validation.py complexity.txt 100 Prec-100 Rec-100
